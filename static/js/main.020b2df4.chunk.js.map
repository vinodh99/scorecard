{"version":3,"sources":["actions/updateroi.js","constants/actionTypes.js","components/roiTable.js","components/cards.js","components/scorecard.js","reducers/initialState.js","reducers/updateroi.js","reducers/index.js","routes.js","store/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["updateroi","gtm","gfx","ghc1","ghc2","gql","coi","type","RoiTable","dataSource","this","props","roiValues","console","log","react_default","a","createElement","table","className","columns","title","dataIndex","Component","Cards","Card","Meta","Form","Item","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleVisibleChange","visible","setState","handleMessageInput","e","defineProperty","target","name","value","GTM","rpy","parseInt","state","rie","dispatch","GQL","fpy","rpm","GHC1","ias","ish","GHC2","das","ds","min","GFX","aar","onChange","tooltipDisplay","def","tooltip","placement","icon","onChange1","roi","por","hpw","tpr","_this2","getFieldDecorator","form","style","background","height","row","gutter","col","span","paddingBottom","paddingTop","paddingLeft","card","textAlign","bordered","toFixed","alignItems","input","onPressEnter","placeholder","size","popover","alignContent","content","es_form","assign","labelCol","xs","sm","wrapperCol","label","rules","required","defaultValue","trigger","onVisibleChange","fontWeight","paddingRight","justifyContent","borderRadius","slider","max","onAfterChange","step","Span","offset","hoverable","roiTable","wrappedCards","create","connect","updatedRoi","calcValues","Header","Layout","Content","Footer","DashBoard","Sider","Menu","SubMenu","data","menu","key","href","layout","minHeight","padding","color","fontFamily","dropdown","overlay","margin","components_cards","initialState","arr","rootReducer","combineReducers","arguments","length","undefined","action","newState","objectSpread","time","Date","ch","getHours","cm","getMinutes","push","concat","store","createStore","reducer","configureStore","routes","BrowserRouter","es","Switch","Route","exact","path","render","components_scorecard","Redirect","to","App","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.020b2df4.chunk.js","sourcesContent":["import * as types from '../constants/actionTypes';\n\nexport const updateroi = (gtm, gfx, ghc1, ghc2, gql, coi) => ({\n    type: types.UPDATE_ROI,\n    gtm,\n    gfx,\n    ghc1,\n    ghc2,\n    gql,\n    coi\n})\n","export const UPDATE_ROI = 'UPDATE_ROI';\n","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Divider, Tag } from 'antd';\n\nclass RoiTable extends Component {\n    // constructor(props) {\n    //     super(props)\n    // }\n    render() {\n        const dataSource = this.props.roiValues;\n        console.log(dataSource)\n        const columns = [{\n            title: 'ROI',\n            dataIndex: 'name',\n        }, {\n            title: 'Time',\n            dataIndex: 'time'\n        }];\n        return (\n            <div>\n                <p><Table className='table' dataSource={dataSource} columns={columns} /></p>\n            </div>\n        )\n    }\n}\n\nexport default RoiTable;","import React, { Component } from 'react';\nimport { Card, Row, Col, Slider, InputNumber, Form, Input, Tooltip, Icon, Popover } from 'antd';\nimport './cards.css';\nimport './carousal.css';\nimport { updateroi } from '../actions/updateroi';\nimport { connect } from 'react-redux';\nimport RoiTable from './roiTable';\nconst { Meta } = Card;\nconst FormItem = Form.Item;\n\nclass Cards extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            visible: false,\n            min: 28.3,\n            rie: '110/115',\n            coi: 0,\n            rpy: '',\n            fpy: '',\n            gtm: 0,\n            gql: 0.0,\n            ghc1: 0,\n            ghc2: 0,\n            gfx: 0,\n            rpm: '',\n            ias: '',\n            ish: '',\n            das: '',\n            ds: 0.18,\n            aar: '',\n            roi: 0,\n            por: 0.036,\n            hpw: 0.16,\n            tpr: 0.18,\n\n        }\n    }\n    handleVisibleChange = (visible) => {\n        this.setState({\n            visible\n        });\n    }\n    handleMessageInput = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n        // this.GTM()\n        // this.GQL()\n        // this.GHC1()\n        // this.GHC2()\n        // this.GFX()\n    }\n\n\n    GTM = () => {\n        let rpy = parseInt(this.state.rpy, 10);\n        let rie = parseInt(this.state.rie, 10);\n        if (rpy !== 0) {\n            let gtm = rpy * rie;\n            this.setState({\n                gtm: gtm\n            })\n            this.props.dispatch(updateroi(this.state.gtm, this.state.gfx, this.state.ghc1, this.state.ghc2, this.state.gql, this.state.coi))\n            // return gtm;\n        }\n\n    }\n    GQL = () => {\n        if (this.state.fpy !== 0 && this.state.rpm !== 0) {\n            let gql = this.state.fpy * (28.3) * this.state.rpm;\n            this.setState({\n                gql: gql\n            })\n            this.props.dispatch(updateroi(this.state.gtm, this.state.gfx, this.state.ghc1, this.state.ghc2, this.state.gql, this.state.coi))\n        }\n    }\n    GHC1 = () => {\n        if (this.state.ias !== 0 && this.state.ish !== 0) {\n            let ghc1 = this.state.ias * this.state.ish * 0.16;\n            this.setState({\n                ghc1: ghc1\n            })\n            this.props.dispatch(updateroi(this.state.gtm, this.state.gfx, this.state.ghc1, this.state.ghc2, this.state.gql, this.state.coi))\n        }\n\n    }\n    GHC2 = () => {\n        if (this.state.das !== 0 && this.state.ds !== 0) {\n            let ghc2 = this.state.das * this.state.min * 0.18;\n            this.setState({\n                ghc2: ghc2\n            })\n            // return ghc2\n        }\n\n    }\n\n    GFX = () => {\n        if (this.state.aar !== 0) {\n\n            let gfx = this.state.aar * 0.036;\n            this.setState({\n                gfx: gfx\n            })\n            this.props.dispatch(updateroi(this.state.gtm, this.state.gfx, this.state.ghc1, this.state.ghc2, this.state.gql, this.state.coi))\n        }\n\n    }\n    onChange = (e, name) => {\n        console.log(e)\n        this.setState({\n            [name]: e\n        });\n    }\n\n\n    tooltipDisplay = (def) => {\n        return (\n            <Tooltip placement=\"topLeft\" title={def} >\n                <Icon type=\"exclamation-circle\" />\n            </Tooltip>\n        )\n    }\n\n    tooltip = (def) => {\n        switch (def) {\n            case 'tricd':\n                return this.tooltipDisplay('Time reduction by implementing continuous delivery');\n            case 'tsrca':\n                return this.tooltipDisplay('Time spent on root cause analysis');\n            case 'tdspr':\n                return this.tooltipDisplay('Time developers spend on problem resolution');\n            default:\n                return 'not defined';\n        }\n    }\n    onChange1 = () => {\n        // console.log(\"hello\")\n        this.props.dispatch(updateroi(this.state.gtm, this.state.gfx, this.state.ghc1, this.state.ghc2, this.state.gql, this.state.coi))\n\n    }\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n        };\n        // console.log(this.props)\n        const { coi } = this.state;\n        const { gtm } = this.state;\n        const { gql } = this.state;\n        const { ghc1 } = this.state;\n        const { ghc2 } = this.state;\n        const { gfx } = this.state;\n\n        return (\n            <div style={{ background: '#ECECEC', height: 750 }} >\n                <Row gutter={5} >\n                    <Col span={20} >\n                        <Row className=\"row\"\n                            gutter={10}\n                            style={{ paddingBottom: 15, paddingTop: 15, paddingLeft: 15 }} >\n                            <Col span={12} >\n                                <Card className=\"card\"\n                                    style={{ background: '#BCC0C2', textAlign: 'center', height: 237 }}\n                                    bordered={false} >\n                                    <p>\n                                        Revenue gains from accelerated time to market of new functionality <br /> (GTM) </p>\n                                    <h1 >\n                                        GTM: {\n                                            this.state.gtm.toFixed(2)\n                                        }\n                                    </h1>\n                                    <Row >\n                                        <Col span={\n                                            12\n                                        }\n                                            style={\n                                                {\n                                                    alignItems: 'center'\n                                                }\n                                            } >\n                                            <p > Revenue Per Year < br />\n\n                                                { /* <Col span={6} offset={9} > */}\n                                                <Input name=\"rpy\"\n                                                    type=\"number\"\n                                                    className=\"rpy-input\"\n                                                    value={this.state.rpy}\n                                                    onChange={this.handleMessageInput}\n                                                    // defaultValue='0'\n                                                    onPressEnter={this.GTM}\n                                                    placeholder=\"rpy\"\n                                                    size=\"small\"\n                                                />\n                                                { /* </Col> */}\n                                            </p>\n                                        </Col >\n                                        <Col span={\n                                            12\n                                        } >\n                                            <p> Revenue Increase Estimate\n                                                <Popover\n                                                    alignContent=\"center\"\n                                                    content={<p>(default value is set to {this.state.rie}, can be changed below)<br />\n                                                        <Form.Item\n                                                            // alignContent=\"center\"\n                                                            {...formItemLayout}\n                                                            label=\"RIE\"\n                                                        >\n                                                            {getFieldDecorator('number', {\n                                                                rules: [{\n                                                                    required: false,\n                                                                }],\n                                                            })(\n                                                                <Input\n                                                                    className=\"rpy-input\"\n                                                                    // height\n                                                                    textAlign='center'\n                                                                    name='rie'\n                                                                    onChange={this.handleMessageInput}\n                                                                    value={this.state.rie}\n                                                                    defaultValue='110/115'\n                                                                    onPressEnter={this.GTM}\n                                                                />)}\n                                                        </Form.Item>\n                                                    </p>}\n                                                    trigger=\"click\"\n                                                    visible={this.state.visible}\n                                                    onVisibleChange={this.handleVisibleChange} >\n                                                    <Icon type=\"question-circle-o\" />\n                                                </Popover><br /> < span style={{ fontWeight: 'bold' }} > {this.state.rie} </span></p >\n                                        </Col> </Row > </Card>\n                            </Col>\n                            <Col span={12} >\n                                <Card className=\"card\"\n                                    style={{ background: /*'#33CCF4'*/ '#BCC0C2', textAlign: 'center', height: 237 }}\n                                    bordered={false} >\n                                    <p > Gain from flexibility in the IT environment <br /> (GFX) </p>\n                                    <h1 > GFX: {this.state.gfx.toFixed(2)} </h1>\n                                    <Row >\n                                        <Col span={12}\n                                            style={{ alignItems: 'center' }} >\n                                            <p> Application Annual Revenue <br />\n                                                <Input\n                                                    name=\"aar\"\n                                                    type=\"number\"\n                                                    className=\"aar-input\"\n                                                    value={this.state.aar}\n                                                    onChange={this.handleMessageInput}\n                                                    placeholder=\"aar\"\n                                                    size=\"small\"\n                                                />\n                                            </p>\n                                        </Col >\n                                        <Col span={12} >\n                                            <p> 72 % Avg TCO reduction x5 % cost of IT as percentage of revenue <br /> < span style={{ fontWeight: 'bold' }} > {this.state.por} </span></p>\n                                        </Col>\n                                    </Row >\n                                </Card>\n                            </Col >\n                        </Row>\n                        <Row className=\"row\" gutter={10}\n                            style={{ paddingLeft: 15, paddingRight: 10, paddingBottom: 10 }} >\n                            <Col span={12} >\n                                <Card className=\"card\" style={\n                                    {\n                                        background: '#BCC0C2' /*'#FECA4F'*/,\n                                        textAlign: 'center',\n                                        height: 320\n                                    }\n                                }\n                                    bordered={\n                                        false\n                                    }>\n                                    <p >\n                                        Gains from enhanced IT team productivity and cost reduction of IT headcount waste(GHC) </p>\n                                    <h4 >\n                                        GHC(IT Ops): {\n                                            this.state.ghc1.toFixed(2)\n                                        }\n                                    </h4>\n                                    <Row gutter={10} >\n                                        <Col span={8}\n                                            style={\n                                                {\n                                                    alignItems: 'center'\n                                                }\n                                            } >\n                                            <p> IT average salary <br /> { /* <Col span={8} offset={7} style={{ alignItems: 'center' }}> */}\n                                                <Input\n                                                    name=\"ias\"\n                                                    className=\"ias-input\"\n                                                    type=\"number\"\n                                                    value={this.state.ias}\n                                                    onChange={this.handleMessageInput}\n                                                    placeholder='ias'\n                                                    size=\"small\" />\n                                            </p>\n                                        </Col>\n                                        <Col span={8} >\n                                            <p > 7.2 / 45 saving hours per week / total hours <br /> < span style={{ fontWeight: 'bold' }} > {this.state.hpw} </span></p >\n                                        </Col>\n                                        <Col span={8} >\n                                            <p > IT staff headcount <br />\n                                                <Input className='aar-input'\n                                                    name=\"ish\"\n                                                    type=\"number\"\n                                                    value={this.state.ish}\n                                                    onChange={this.handleMessageInput}\n                                                    placeholder='ish'\n                                                    size=\"small\"\n                                                />\n                                            </p>\n                                        </Col>\n                                    </Row >\n                                    <h4 >\n                                        GHC(Developers): {\n                                            this.state.ghc2.toFixed(2)\n                                        } </h4>\n                                    <Row gutter={10} >\n                                        <Col span={8}\n                                            style={{ alignItems: 'center' }} >\n                                            <p > Developer average salary <br />\n                                                <Input\n                                                    name=\"das\"\n                                                    type=\"number\"\n                                                    value={this.state.das}\n                                                    onChange={this.handleMessageInput}\n                                                    placeholder=\"das\"\n                                                    className=\"aar-input\"\n                                                    size=\"small\" />\n                                            </p>\n                                        </Col>\n                                        <Col span={8} >\n                                            <p > Average Minutes to recover difference < br /> < span style={{ fontWeight: 'bold' }} > {this.state.min} minutes </span></p >\n                                        </Col>\n                                        <Col span={8} >\n                                            <p > 60 % TRICD {\n                                                this.tooltip('tricd')\n                                            } x 75 % TSRCA {this.tooltip('tsrca')} x 40 % TDSPR {this.tooltip('tdspr')} <br /> < span style={{ fontWeight: 'bold' }} > {this.state.tpr} minutes </span></p >\n                                        </Col>\n                                    </Row >\n                                </Card>\n                            </Col >\n                            <Col span={12} >\n                                <Card className=\"card\" style={{\n                                    background: /*'#35D385'*/ '#BCC0C2',\n                                    textAlign: 'center',\n                                    height: 320\n                                }\n                                }\n                                    bordered={\n                                        false\n                                    } >\n                                    <p > Gains from cost reduction of application failures resulting from increased quality(GQL) </p>\n                                    <h1> GQL: {this.state.gql.toFixed(2)}\n                                    </h1>\n                                    <Row gutter={10} >\n                                        <Col span={8}\n                                            style={\n                                                {\n                                                    alignItems: 'center'\n                                                }\n                                            } >\n                                            <p > Failures Per Year <br />\n                                                <Input\n                                                    className='aar-input'\n                                                    name=\"fpy\"\n                                                    type=\"number\"\n                                                    value={this.state.fpy}\n                                                    onChange={this.handleMessageInput}\n                                                    size=\"small\"\n                                                    placeholder='fpy' />\n                                            </p>\n                                        </Col>\n                                        <Col span={8} >\n                                            <p > Average Minutes to recover difference <br /> < span style={\n                                                {\n                                                    fontWeight: 'bold'\n                                                }\n                                            } > {\n                                                    this.state.min\n                                                }\n                                                minutes </span></p >\n                                        </Col>\n                                        <Col span={8}\n                                            style={\n                                                {\n                                                    textAlign: 'center'\n                                                }\n                                            } >\n                                            <p > Revenue per minute <br /> { /* <Col span={10} offset={7} style={{ textAlign: 'center' }}> */} { /* <Row> */}\n                                                <Input\n                                                    className='aar-input'\n                                                    name=\"rpm\"\n                                                    type=\"number\"\n                                                    value={this.state.rpm}\n                                                    onChange={this.handleMessageInput}\n                                                    size=\"small\"\n                                                    placeholder='rpm' />\n                                                <br /> Minutes </p>\n                                        </Col >\n                                    </Row>\n                                </Card >\n                            </Col>\n                        </Row >\n                        <Row className=\"row\" gutter={5}\n                            style={\n                                {\n                                    paddingTop: 5,\n                                    paddingLeft: 15\n                                }\n                            } >\n                            <Col >\n                                <Card className=\"card\"\n                                    style={{\n                                        background: '#535353a',\n                                        textAlign: 'center',\n                                        height: 300,\n                                        justifyContent: 'center',\n                                        borderRadius: 10,\n                                    }\n                                    }\n                                    bordered={\n                                        false\n                                    } > { /* <div> */}\n                                    <p >\n                                        Return Of Investment\n                                    </p>\n                                    <h1 > ROI: {\n                                        this.props.roi.toFixed(2)\n                                    } </h1>\n                                    <Row >\n                                        <Col span={12} >\n                                            <p > Cost Of Investment: </p>\n                                            <Slider\n                                                className=\"slider\"\n                                                min={1}\n                                                max={1000}\n                                                onChange={e => this.onChange(e, \"coi\")}\n                                                onAfterChange={e => this.onChange1(e)}\n                                                name=\"coi\"\n                                                value={typeof coi === 'number' ? coi : 0}\n                                                step={0.01}\n                                            />\n                                            <p > GTM </p><Slider\n                                                className=\"slider\"\n                                                min={1}\n                                                max={1000}\n                                                onChange={e => this.onChange(e, \"gtm\")}\n                                                onAfterChange={e => this.onChange1(e)}\n                                                name='gtm'\n                                                value={typeof gtm === 'number' ? gtm : 0\n                                                }\n                                                step={0.01}\n                                            />\n                                            <p > GQL </p><Slider\n                                                className=\"slider\"\n                                                min={1}\n                                                max={1000}\n                                                onChange={e => this.onChange(e, \"gql\")}\n                                                onAfterChange={e => this.onChange1(e)}\n                                                name='gql'\n                                                value={typeof gql === 'number' ? gql : 0}\n                                                step={0.01}\n                                            />\n                                        </Col >\n                                        <Col span={12} >\n                                            < p > GHC(Developers) </p><Slider\n                                                className=\"slider\"\n                                                min={1}\n                                                max={1000}\n                                                onChange={e => this.onChange(e, \"ghc1\")}\n                                                onAfterChange={e => this.onChange1(e)}\n                                                name='ghc1'\n                                                value={typeof ghc1 === 'number' ? ghc1 : 0}\n                                                step={0.01}\n                                            />\n                                            <p > GHC(IT ops) </p>\n                                            <Slider\n                                                className=\"slider\"\n                                                min={1}\n                                                max={1000}\n                                                onChange={e => this.onChange(e, \"ghc2\")}\n                                                onAfterChange={e => this.onChange1(e)}\n                                                name='ghc2'\n                                                value={typeof ghc2 === 'number' ? ghc2 : 0}\n                                                step={0.01}\n                                            />\n                                            <p > GFX </p> <Slider\n                                                className=\"slider\"\n                                                min={1}\n                                                max={1000}\n                                                onChange={e => this.onChange(e, \"gfx\")}\n                                                onAfterChange={e => this.onChange1(e)}\n                                                name='gfx'\n                                                value={typeof gfx === 'number' ? gfx : 0}\n                                                step={0.01}\n                                            />\n                                        </Col >\n                                    </Row>\n                                </Card>\n                            </Col >\n                        </Row>\n                    </Col >\n                    <Col Span={4}\n                        offset={20}\n                        style={{\n                            textAlign: 'center',\n                            paddingBottom: 10,\n                            paddingTop: 10,\n                            paddingLeft: 5,\n                            // paddingRight: 10\n                        }\n                        } >\n                        <Card className=\"card\" hoverable style={\n                            {\n                                background: 'grey',\n                                textAlign: 'center',\n                                alignContent: 'center',\n                                height: 895,\n                                borderRadius: '10px'\n                            }\n                        }\n                            bordered={\n                                false\n                            } >\n                            <p></p>\n                            <p>{<RoiTable {...this.props} />}</p>\n                        </Card >\n                        {/* </div> */}\n                    </Col>\n                </Row >\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log('hello ' + JSON.stringify(state))\n    console.log(state)\n    return {\n        roi: state.updatedRoi.roi,\n        roiValues: state.updatedRoi.calcValues\n    }\n}\nconst wrappedCards = Form.create()(Cards)\n\nexport default connect(mapStateToProps)(wrappedCards);","import React, { Component } from 'react';\nimport './scorecard.css';\nimport { Layout, Menu, Icon, Row, Col, Dropdown } from 'antd';\nimport Cards from './cards';\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst SubMenu = Menu.SubMenu;\n\n\nclass DashBoard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n\n    render() {\n        const data = (\n            <Menu>\n                <Menu.Item key=\"0\">\n                    <a href=\"http://www.alipay.com/\">change RIE</a>\n                </Menu.Item>\n                <Menu.Item key=\"1\">\n                    <a href=\"http://www.taobao.com/\">change Avg Minutes for GQL</a>\n                </Menu.Item>\n                {/* <Menu.Divider /> */}\n                <Menu.Item key=\"3\">change saving Hours for GHC (IT Ops)</Menu.Item>\n                <Menu.Item key=\"3\">Time developers spend on problems for GHC(Dev)</Menu.Item>\n\n            </Menu>\n        );\n        return (\n            <div >\n                <Layout style={{ minHeight: '100vh' }}>\n                    {/* <Sider>\n                        <Menu defaultSelectedKeys={['1']} mode=\"inline\">\n                            <img src=\"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\" alt=\"image\" width=\"200px\" height=\"70px\"></img>\n\n                            <SubMenu\n                                key=\"sub1\"\n                                title={<span style={{ textAlign: 'right' }}><Icon type=\"sliders\" />GTM</span>}\n                            >\n                                <Menu.Item key=\"1\"  >Revenue/Year: 20</Menu.Item>\n                                <Menu.Item key=\"2\" >\n                                    <Row>\n                                        Revenue inc estimate\n                            </Row>\n                                    <Row>\n                                        20\n                            </Row>\n                                </Menu.Item>\n                            </SubMenu>\n                            <SubMenu\n                                key=\"sub2\"\n                                title={<span style={{ textAlign: 'right' }}><Icon type=\"sliders\" />GQL</span>}\n                            >\n                                <Menu.Item key=\"1\"  >Failures/Year: 20</Menu.Item>\n                                <Menu.Item key=\"2\" >Revenue/minute</Menu.Item>\n                            </SubMenu>\n                            <SubMenu\n                                key=\"sub3\"\n                                title={<span style={{ textAlign: 'right' }}><Icon type=\"sliders\" />GHC (IT Ops)</span>}\n                            >\n                                <Menu.Item key=\"1\"  >IT Average Salary</Menu.Item>\n                                <Menu.Item key=\"2\" >IT staff Headcount</Menu.Item>\n                            </SubMenu>\n                            <SubMenu\n                                key=\"sub4\"\n                                title={<span style={{ textAlign: 'right' }}><Icon type=\"sliders\" />GHC (Developers)</span>}\n                            >\n                                <Menu.Item key=\"1\"  >Develper Avg salary</Menu.Item>\n                                <Menu.Item key=\"2\" >Developer Staff</Menu.Item>\n                            </SubMenu>\n                            <SubMenu\n                                key=\"sub5\"\n                                title={<span style={{ textAlign: 'right' }}><Icon type=\"sliders\" />GFX</span>}\n                            >\n                                <Menu.Item key=\"1\"  >App. Annual Revenue</Menu.Item>\n                            </SubMenu>\n                        </Menu>\n                    </Sider> */}\n                    <Layout>\n                        <Header style={{ background: '#525252', padding: 0 }} >\n                            <Row >\n                                <Col span={12}>\n                                    <h1 style={{ fontWeight: 'bold', color: '#0066c', fontFamily: 'Cochin', textAlign: 'right' }}>SCORECARD</h1>\n                                </Col>\n                                <Col span={12} >\n                                    <Dropdown style={{ background: '#525252' }} overlay={data} trigger={['click']}>\n                                        <h1 className=\"ant-dropdown-link\" style={{ paddingRight: 40, fontWeight: 'bold', color: '#0066c', fontFamily: 'Cochin', textAlign: 'right' }}>\n                                            <Icon className=\"custom-icon\" type=\"setting\" />\n                                        </h1>\n                                    </Dropdown>\n\n                                </Col>\n\n                            </Row>\n\n                        </Header>\n                        <Content style={{ alignItems: 'center', margin: '24px 16px', padding: 24, background: '#fff', minHeight: 580 }}>\n                            <Cards {...this.props} />\n                        </Content>\n                        <Footer style={{ textAlign: 'center' }}>\n                        </Footer>\n                    </Layout>\n                </Layout >\n            </div >\n        );\n    }\n}\n\n\n\nexport default DashBoard;\n\n","export default {\n    roi: 0,\n    calcValues: []\n}","import initialState from './initialState';\nimport * as types from '../constants/actionTypes';\n\nconst arr = [];\nconst updateroi = (state, action) => {\n    // console.log('im reducer')\n    let newState = { ...state };\n    // if (action.gtm !== 0 && action.gql !== 0 && action.gfx !== 0 && action.ghc1 !== 0 && this.state.ghc2 !== 0) {\n    let roi = (((action.gtm + action.gql + action.ghc1 + action.ghc2 + action.gfx) - action.coi) / action.coi) * 100;\n    let time = new Date();\n    let ch = time.getHours();\n    let cm = time.getMinutes();\n    arr.push({ name: roi.toFixed(2), time: `${ch}:${cm}hrs` });\n\n    // time.push(new Date());\n    // if (roi !== NaN)\n    return roi ? (newState = Object.assign({}, state, { roi, calcValues: arr })) : { ...newState };\n    // return { ...newState };\n    // }\n    // return state;\n}\n\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case types.UPDATE_ROI:\n            return updateroi(state, action);\n        default:\n            return state;\n    }\n}","import updatedRoi from './updateroi';\nimport { combineReducers } from 'redux';\nconst rootReducer = combineReducers({\n    updatedRoi\n})\n\nexport default rootReducer;\n","import React from \"react\";\nimport { Route, Switch, Redirect, BrowserRouter } from \"react-router-dom\";\n//import Carousal from \"./components/carousal\";\nimport Scorecard from './components/scorecard';\nimport configureStore from './store/configureStore';\nimport { Provider } from 'react-redux';\n\nconst store = configureStore();\nexport default () => {\n    return (\n\n\n\n        <BrowserRouter>\n            <Provider store={store}>\n                <Switch>\n                    {/* <Route exact path=\"/carousel\" render={props => <Carousal {...props} />} /> */}\n                    <Route exact path=\"/scorecard\" render={props => <Scorecard {...props} />} />\n                    {/* <Route exact path=\"/home\" render={props => <Home {...props} />} />\n        <Route exact path=\"/createNewRequest\" render={props => <CreateNewRequest {...props} />} /> */}\n\n                    <Redirect to=\"/scorecard\" />\n                </Switch>\n            </Provider>\n        </BrowserRouter>\n    );\n};","import { createStore } from 'redux';\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n    // const sagaMiddleware = createSagaMiddleware();\n    return {\n        ...createStore(reducer)\n        // runSaga: sagaMiddleware.run(rootSaga)\n    };\n};\n\nexport default configureStore;\n// redux saga is a library that aims to make side effects in react-redux applications easier and better","import React, { Component } from 'react';\nimport Routes from './routes';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='image'>\n        <Routes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configureStore';\nimport { Provider } from 'react-redux';\n\n// const store = configureStore;\n{/* <BrowserRouter> */ }\n\n// <Provider store={store}>\nReactDOM.render(<App />, document.getElementById('root'));\n// </Provider>\n// </BrowserRouter>\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}