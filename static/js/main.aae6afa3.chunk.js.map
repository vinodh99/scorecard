{"version":3,"sources":["components/cards.js","components/scorecard.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["Cards","Card","Meta","Form","Item","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleVisibleChange","visible","setState","handleMessageInput","e","defineProperty","target","name","value","GTM","GQL","GHC1","GHC2","GFX","state","rpy","gtm","toFixed","ROI","fpy","rpm","gql","console","log","ias","ish","ghc1","das","ds","ghc2","aar","gfx","roi","coi","onChange","min","rie","por","hpw","tpr","_this2","form","getFieldDecorator","react_default","a","createElement","style","background","height","row","gutter","col","span","className","paddingBottom","paddingTop","paddingLeft","card","textAlign","bordered","alignItems","input","type","placeholder","size","popover","content","onClick","hide","title","trigger","onVisibleChange","icon","fontWeight","justifyContent","borderRadius","slider","max","step","Span","offset","paddingRight","hoverable","align","Component","wrappedCards","create","Header","Layout","Content","Footer","Sider","SubMenu","Menu","DashBoard","menu","key","href","layout","minHeight","defaultSelectedKeys","mode","src","alt","width","padding","color","fontFamily","margin","components_cards","routes","BrowserRouter","Switch","Route","exact","path","render","components_scorecard","Redirect","to","App","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aae6afa3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Row, Col, Slider, InputNumber, Form, Input, Tooltip, Icon, Popover } from 'antd';\nimport './cards.css'\nimport './carousal.css'\nconst { Meta } = Card;\nconst FormItem = Form.Item;\n\nclass Cards extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            visible: false,\n            min: '28.3',\n            rie: '115/100',\n            coi: 0,\n            rpy: '',\n            fpy: '',\n            gtm: '0.0',\n            gql: '0.0',\n            ghc1: '0.0',\n            ghc2: '0.0',\n            gfx: '0.0',\n            rpm: '',\n            ias: '',\n            ish: '',\n            das: '',\n            ds: 0,\n            aar: '',\n            roi: '0.0',\n            por: '0.036',\n            hpw: '0.16',\n            tpr: '0.18',\n\n        }\n    }\n    handleVisibleChange = (visible) => {\n        this.setState({ visible });\n    }\n    handleMessageInput = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n        this.GTM()\n        this.GQL()\n        this.GHC1()\n        this.GHC2()\n        this.GFX()\n\n        // console.log(\"xyz\"+this.state.firstName)\n    }\n\n\n    GTM = () => {\n        // let gtm=parse\n        if (this.state.rpy !== 0) {\n            let gtm = this.state.rpy * (115 / 110);\n            this.setState({\n                gtm: gtm.toFixed(2)\n            })\n            this.ROI();\n\n            // return gtm;\n        }\n    }\n    GQL = () => {\n        if (this.state.fpy !== 0 && this.state.rpm !== 0) {\n            let gql = this.state.fpy * (28.3) * this.state.rpm;\n            console.log(gql)\n            this.setState({\n                gql: gql.toFixed(2)\n            })\n            this.ROI();\n\n            // return gql;\n        }\n        // else {\n        //     this.setState({\n        //         gql: 0\n        //     })\n        // }\n    }\n    GHC1 = () => {\n        if (this.state.ias !== 0 && this.state.ish !== 0) {\n            let ghc1 = this.state.ias * this.state.ish * 0.16;\n            this.setState({\n                ghc1: ghc1.toFixed(2)\n            })\n            // return ghc1;\n            this.ROI();\n        }\n    }\n    GHC2 = () => {\n        if (this.state.das !== 0 && this.state.ds !== 0) {\n            let ghc2 = this.state.das * this.state.ds * 0.18;\n            this.setState({\n                ghc2: ghc2.toFixed(2)\n            })\n            this.ROI();\n\n            // return ghc2\n        }\n    }\n\n    GFX = () => {\n        if (this.state.aar !== 0) {\n\n            let gfx = this.state.aar * 0.036;\n            this.setState({\n                gfx: gfx.toFixed(2)\n            })\n            this.ROI();\n\n            // return gfx\n\n\n        }\n    }\n    ROI = () => {\n        // let gtm = parseInt(this.state.gtm);\n        // let gql = parseInt(this.state.gql);\n        // let ghc1 = parseInt(this.state.ghc1);\n        // let ghc2 = parseInt(this.state.ghc2);\n        // let gfx = parseInt(this.state.gfx);\n        if (this.state.gtm !== 0 && this.state.gql !== 0 && this.state.ghc1 !== 0 && this.state.ghc2 !== 0 && this.state.gfx !== 0) {\n            // if (gtm !== 0 && gql !== 0 && ghc1 !== 0 && ghc2 !== 0 && gfx !== 0) {\n            const roi = (((this.state.gtm + this.state.gql + this.state.ghc1 + this.state.ghc2 + this.state.gfx) - this.state.coi) / this.state.coi) * 100;\n            // let roi = (((gtm + gql + ghc1 + ghc2 + gfx) - coi) / coi) * 100;\n\n            this.setState({\n                roi: roi.toFixed(2)\n            })\n        }\n    }\n\n    onChange = (e, name) => {\n        this.setState({\n            [name]: e\n        });\n    }\n    // onChangenum = value => {\n    //     this.setState({\n    //         inputValue: value\n    //     });\n    // };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            // labelCol: {\n            //     xs: { span: 24 },\n            //     sm: { span: 8 },\n            // },\n            // wrapperCol: {\n            //     xs: { span: 24 },\n            //     sm: { span: 4 },\n            // },\n        };\n        const { rpy } = this.state;\n        const { coi } = this.state;\n        const { gtm } = this.state;\n        const { gql } = this.state;\n        const { ghc1 } = this.state;\n        const { ghc2 } = this.state;\n        const { gfx } = this.state;\n        const { roi } = this.state;\n\n        return (\n            <div style={{ background: '#ECECEC', height: 750 }} >\n                <Row gutter={5}>\n                    <Col span={20}>\n                        <Row className=\"row\" gutter={5} style={{ paddingBottom: 5, paddingTop: 10, paddingLeft: 15 }}>\n                            <Col span={12}>\n                                <Card className='card' style={{ background: '#BCC0C2', textAlign: 'center', height: 237 }} bordered={false}>\n                                    <p >\n                                        Revenue gains from accelerated time to market of new functionality <br />(GTM)\n                                    </p>\n                                    <h1>\n                                        GTM: {this.state.gtm}\n                                    </h1>\n                                    <Row>\n                                        <Col span={12} style={{ alignItems: 'center' }}>\n                                            <p>Revenue Per Year <br />\n\n                                                {/* <Col span={6} offset={9} > */}\n                                                <Input\n                                                    name=\"rpy\"\n                                                    type=\"number\"\n                                                    className=\"rpy-input\"\n                                                    value={this.state.rpy}\n                                                    onChange={this.handleMessageInput}\n                                                    placeholder=\"rpy\"\n                                                    size=\"small\"\n\n                                                />\n                                                {/* </Col> */}\n                                            </p>\n                                        </Col>\n                                        <Col span={12}>\n                                            <p>Revenue Increase Estimate\n                                            <Popover\n                                                    content={<a onClick={this.hide}>(It is set to 115/110 by default)</a>}\n                                                    title=\"Set the value of Revenue Increase Estimate\"\n                                                    trigger=\"click\"\n                                                    visible={this.state.visible}\n                                                    onVisibleChange={this.handleVisibleChange}\n                                                >\n                                                    <Icon type=\"question-circle-o\" />\n                                                </Popover><br /><span style={{ fontWeight: 'bold' }}>{this.state.rie}</span></p>\n                                        </Col>\n                                    </Row>\n                                </Card>\n\n                            </Col>\n                            <Col span={12} >\n                                <Card style={{ background: /*'#33CCF4'*/'#BCC0C2', textAlign: 'center', height: 237 }} bordered={false}>\n                                    <p>Gain from flexibility in the IT environment <br />(GFX)</p>\n                                    <h1>GFX: {this.state.gfx}</h1>\n                                    <Row>\n                                        <Col span={12} style={{ alignItems: 'center' }}>\n                                            <p>Application Annual Revenue <br />\n\n                                                {/* <Col span={6} offset={9} > */}\n                                                <Input\n                                                    name=\"aar\"\n                                                    type=\"number\"\n                                                    className=\"aar-input\"\n                                                    value={this.state.aar}\n                                                    onChange={this.handleMessageInput}\n                                                    placeholder=\"aar\"\n                                                    size=\"small\"\n                                                // defaultValue='0.0'\n\n                                                />\n                                                {/* </Col> */}\n                                            </p>\n                                        </Col>\n                                        <Col span={12}>\n                                            <p>72% Avg TCO reduction x5% cost of IT as percentage of revenue<br /><span style={{ fontWeight: 'bold' }}>{this.state.por}</span></p>\n                                        </Col>\n                                    </Row>\n                                </Card>\n                            </Col>\n                        </Row>\n                        <Row className=\"row\" gutter={5} style={{ paddingLeft: 15 }}>\n                            <Col span={12}>\n                                <Card style={{ background: '#BCC0C2' /*'#FECA4F'*/, textAlign: 'center', height: 320 }} bordered={false}>\n                                    <p>\n                                        Gains from enhanced IT team productivity and cost reduction of IT headcount waste (GHC)\n                                    </p>\n                                    <h4>\n                                        GHC (IT Ops): {this.state.ghc1}\n                                    </h4>\n                                    <Row gutter={10}>\n                                        <Col span={8} style={{ alignItems: 'center' }}>\n                                            <p>IT average salary<br />\n                                                {/* <Col span={8} offset={7} style={{ alignItems: 'center' }}> */}\n                                                <Input\n                                                    name=\"ias\"\n                                                    className=\"ias-input\"\n                                                    type=\"number\"\n                                                    value={this.state.ias}\n                                                    onChange={this.handleMessageInput}\n                                                    placeholder='ias'\n                                                    size=\"small\"\n                                                />\n                                            </p>\n                                            {/* </Col> */}\n                                        </Col>\n                                        <Col span={8}>\n                                            <p>7.2/45 saving hours per week/total hours <br /><span style={{ fontWeight: 'bold' }}>{this.state.hpw}</span></p>\n                                        </Col>\n                                        <Col span={8}>\n                                            <p>IT staff headcount<br />\n                                                {/* <Col span={8} offset={7} style={{ alignItems: 'center' }}> */}\n                                                <Input\n                                                    className='aar-input'\n                                                    name=\"ish\"\n                                                    type=\"number\"\n                                                    value={this.state.ish}\n                                                    onChange={this.handleMessageInput}\n                                                    placeholder='ish'\n                                                    size=\"small\"\n                                                />\n                                            </p>\n                                            {/* </Col> */}\n                                        </Col>\n                                    </Row>\n                                    <h4>\n                                        GHC (Developers): {this.state.ghc2}\n                                    </h4>\n                                    <Row gutter={10}>\n                                        <Col span={8} style={{ alignItems: 'center' }}>\n                                            <p>Developer average salary<br />\n                                                {/* <Col span={8} offset={7} style={{ alignItems: 'center' }}> */}\n                                                <Input\n                                                    name=\"das\"\n                                                    type=\"number\"\n                                                    value={this.state.das}\n                                                    onChange={this.handleMessageInput}\n                                                    placeholder=\"das\"\n                                                    className=\"aar-input\"\n                                                    size=\"small\"\n                                                /></p>\n                                            {/* </Col> */}\n                                        </Col>\n                                        <Col span={8}>\n                                            <p>Average Minutes to recover difference <br /><span style={{ fontWeight: 'bold' }}>{this.state.min} minutes</span></p>\n                                        </Col>\n                                        <Col span={8}>\n                                            <p>60% TRICD x75% TSRCA x40% TDSPR<br /><span style={{ fontWeight: 'bold' }}>{this.state.tpr} minutes</span></p>\n                                        </Col>\n                                    </Row>\n                                </Card>\n                            </Col>\n                            <Col span={12}>\n                                <Card style={{ background: /*'#35D385'*/'#BCC0C2', textAlign: 'center', height: 320 }} bordered={false} >\n                                    <p>Gains from cost reduction of application failures resulting from increased quality (GQL)</p>\n                                    <h1>GQL: {this.state.gql}</h1>\n                                    <Row gutter={10}>\n                                        <Col span={8} style={{ alignItems: 'center' }}>\n                                            <p>Failures Per Year<br />\n                                                {/* <Col span={10} offset={7} style={{ alignItems: 'center' }}> */}\n                                                <Input\n                                                    className='aar-input'\n                                                    name=\"fpy\"\n                                                    type=\"number\"\n                                                    value={this.state.fpy}\n                                                    onChange={this.handleMessageInput}\n                                                    // defaultValue='0.0'\n                                                    size=\"small\"\n                                                    placeholder='fpy'\n                                                /></p>\n                                            {/* </Col> */}\n                                        </Col>\n                                        <Col span={8}>\n                                            <p>Average Minutes to recover difference <br /><span style={{ fontWeight: 'bold' }}>{this.state.min} minutes</span></p>\n                                        </Col>\n                                        <Col span={8}>\n                                            <p>Revenue per minute\n                                            {/* <Col span={10} offset={7} style={{ textAlign: 'center' }}> */}\n                                                {/* <Row> */}\n                                                <Input\n                                                    className='aar-input'\n                                                    name=\"rpm\"\n                                                    type=\"number\"\n                                                    value={this.state.rpm}\n                                                    onChange={this.handleMessageInput}\n                                                    // defaultValue='0.0'\n                                                    size=\"small\"\n                                                    placeholder='rpm'\n                                                /> <br />Minutes</p>\n                                            {/* </Row> */}\n                                            {/* <Row> */}\n                                            {/* </Row> */}\n                                            {/* </Col> */}\n                                        </Col>\n                                    </Row>\n                                </Card>\n\n                            </Col>\n                        </Row>\n                        <Row className=\"row\" gutter={5} style={{ paddingTop: 5, paddingLeft: 15 }}>\n                            <Col>\n                                <Card className=\"card22\" style={{ background: '#535353a', textAlign: 'center', height: 180, justifyContent: 'center', borderRadius: 10, height: '300' }} bordered={false}>\n                                    {/* <div> */}\n                                    <p>\n                                        Return Of Investment\n                                    </p>\n                                    <h1>ROI: {this.state.roi}</h1>\n                                    {/* </div> */}\n                                    {/* <div> */}\n                                    <Row >\n                                        <Col span={12}>\n                                            <p>Cost Of Investment:</p> <Slider\n                                                className=\"slider\"\n                                                min={-1000}\n                                                max={1000}\n                                                onChange={e => this.onChange(e, \"coi\")}\n                                                name=\"coi\"\n                                                value={typeof coi === 'number' ? coi : 0}\n                                                step={0.01}\n                                            />\n                                            <p>GTM</p><Slider\n                                                className=\"slider\"\n                                                min={-1000}\n                                                max={1000}\n                                                onChange={e => this.onChange(e, \"gtm\")}\n                                                name='gtm'\n                                                value={typeof gtm === 'number' ? gtm : 0}\n                                                step={0.01}\n                                            />\n                                            <p>GQL</p><Slider\n                                                className=\"slider\"\n                                                min={-1000}\n                                                max={1000}\n                                                onChange={e => this.onChange(e, \"gql\")}\n                                                name='gql'\n                                                value={typeof gql === 'number' ? gql : 0}\n                                                step={0.01}\n                                            />\n                                        </Col >\n                                        <Col span={12}>\n                                            <p>GHC (Developers)</p><Slider\n                                                className=\"slider\"\n                                                min={-1000}\n                                                max={1000}\n                                                onChange={e => this.onChange(e, \"ghc1\")}\n                                                name='ghc1'\n                                                value={typeof ghc1 === 'number' ? ghc1 : 0}\n                                                step={0.01}\n                                            />\n                                            <p>GHC (IT ops)</p><Slider\n                                                className=\"slider\"\n                                                min={-1000}\n                                                max={1000}\n                                                onChange={e => this.onChange(e, \"ghc2\")}\n                                                name='ghc2'\n                                                value={typeof ghc2 === 'number' ? ghc2 : 0}\n                                                step={0.01}\n                                            />\n                                            <p>GFX</p> <Slider\n                                                className=\"slider\"\n                                                min={-1000}\n                                                max={1000}\n                                                onChange={e => this.onChange(e, \"gfx\")}\n                                                name='gfx'\n                                                value={typeof gfx === 'number' ? gfx : 0}\n                                                step={0.01}\n                                            />\n                                        </Col>\n                                    </Row>\n                                    {/* </div> */}\n                                </Card>\n                            </Col>\n\n\n                        </Row>\n                    </Col>\n                    <Col Span={4} offset={20} style={{ textAlign: 'center', paddingBottom: 10, paddingTop: 10, paddingLeft: 5, paddingRight: 10 }}>\n                        <Card hoverable style={{ background: '#323232', textAlign: 'center', height: 885, align: 'middle' }} bordered={false} >\n\n                            <h1>state</h1>\n                        </Card>\n                    </Col>\n                </Row>\n\n            </div >\n        );\n    }\n}\nconst wrappedCards = Form.create()(Cards)\n\nexport default wrappedCards;","import React, { Component } from 'react';\nimport './scorecard.css';\nimport { Layout, Menu, Icon, Row, Col, Dropdown } from 'antd';\nimport Cards from './cards';\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst SubMenu = Menu.SubMenu;\n\n\nclass DashBoard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n\n    render() {\n        const data = (\n            <Menu>\n                <Menu.Item key=\"0\">\n                    <a href=\"http://www.alipay.com/\">change RIE</a>\n                </Menu.Item>\n                <Menu.Item key=\"1\">\n                    <a href=\"http://www.taobao.com/\">change Avg Minutes for GQL</a>\n                </Menu.Item>\n                {/* <Menu.Divider /> */}\n                <Menu.Item key=\"3\">change saving Hours for GHC (IT Ops)</Menu.Item>\n                <Menu.Item key=\"3\">Time developers spend on problems for GHC(Dev)</Menu.Item>\n\n            </Menu>\n        );\n        return (\n            <div >\n                <Layout style={{ minHeight: '100vh' }}>\n                    <Sider>\n                        <Menu defaultSelectedKeys={['1']} mode=\"inline\">\n                            <img src=\"https://rsrit.com/wp-content/uploads/2017/12/logo_dark.png\" alt=\"image\" width=\"200px\" height=\"70px\"></img>\n\n                            <SubMenu\n                                key=\"sub1\"\n                                title={<span style={{ textAlign: 'right' }}><Icon type=\"sliders\" />GTM</span>}\n                            >\n                                <Menu.Item key=\"1\"  >Revenue/Year: 20</Menu.Item>\n                                <Menu.Item key=\"2\" >\n                                    <Row>\n                                        Revenue inc estimate\n                            </Row>\n                                    <Row>\n                                        20\n                            </Row>\n                                </Menu.Item>\n                            </SubMenu>\n                            <SubMenu\n                                key=\"sub2\"\n                                title={<span style={{ textAlign: 'right' }}><Icon type=\"sliders\" />GQL</span>}\n                            >\n                                <Menu.Item key=\"1\"  >Failures/Year: 20</Menu.Item>\n                                <Menu.Item key=\"2\" >Revenue/minute</Menu.Item>\n                            </SubMenu>\n                            <SubMenu\n                                key=\"sub3\"\n                                title={<span style={{ textAlign: 'right' }}><Icon type=\"sliders\" />GHC (IT Ops)</span>}\n                            >\n                                <Menu.Item key=\"1\"  >IT Average Salary</Menu.Item>\n                                <Menu.Item key=\"2\" >IT staff Headcount</Menu.Item>\n                            </SubMenu>\n                            <SubMenu\n                                key=\"sub4\"\n                                title={<span style={{ textAlign: 'right' }}><Icon type=\"sliders\" />GHC (Developers)</span>}\n                            >\n                                <Menu.Item key=\"1\"  >Develper Avg salary</Menu.Item>\n                                <Menu.Item key=\"2\" >Developer Staff</Menu.Item>\n                            </SubMenu>\n                            <SubMenu\n                                key=\"sub5\"\n                                title={<span style={{ textAlign: 'right' }}><Icon type=\"sliders\" />GFX</span>}\n                            >\n                                <Menu.Item key=\"1\"  >App. Annual Revenue</Menu.Item>\n                            </SubMenu>\n                        </Menu>\n                    </Sider>\n                    <Layout>\n                        <Header style={{ background: '#fff', padding: 0 }} >\n                            <Row >\n                                <Col span={12}>\n                                    <h1 style={{ fontWeight: 'bold', color: '#0066c', fontFamily: 'Cochin', textAlign: 'right' }}>SCORECARD</h1>\n                                </Col>\n                                {/* <Col span={12}>\n                                    <Dropdown overlay={data} trigger={['click']}>\n                                        <h1 className=\"ant-dropdown-link\" style={{ paddingRight: 40, fontWeight: 'bold', color: '#0066c', fontFamily: 'Cochin', textAlign: 'right' }}>\n                                            <Icon className=\"custom-icon\" type=\"setting\" />\n                                        </h1>\n                                    </Dropdown>\n\n                                </Col> */}\n\n                            </Row>\n\n                        </Header>\n                        <Content style={{ alignItems: 'center', margin: '24px 16px', padding: 24, background: '#fff', minHeight: 580 }}>\n                            <Cards {...this.props} />\n                        </Content>\n                        <Footer style={{ textAlign: 'center' }}>\n                        </Footer>\n                    </Layout>\n                </Layout >\n            </div >\n        );\n    }\n}\n\n\n\nexport default DashBoard;\n\n","import React from \"react\";\nimport { Route, Switch, Redirect, BrowserRouter } from \"react-router-dom\";\n//import Carousal from \"./components/carousal\";\nimport Scorecard from './components/scorecard';\n\nexport default () => {\n    return (\n\n\n\n        <BrowserRouter>\n            <Switch>\n                {/* <Route exact path=\"/carousel\" render={props => <Carousal {...props} />} /> */}\n                <Route exact path=\"/scorecard\" render={props => <Scorecard {...props} />} />\n                {/* <Route exact path=\"/home\" render={props => <Home {...props} />} />\n        <Route exact path=\"/createNewRequest\" render={props => <CreateNewRequest {...props} />} /> */}\n\n                <Redirect to=\"/scorecard\" />\n            </Switch>\n        </BrowserRouter>\n    );\n};","import React, { Component } from 'react';\nimport Routes from './routes';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='image'>\n        <Routes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}